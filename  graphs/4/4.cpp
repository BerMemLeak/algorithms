#include <iostream>
#include <fstream>

void bfs(int **ptr_cols, int n, int* buffer, int a, int vertex = 0);
int main(int argc, char *argv[]) {
    int n;
    std::ifstream file("4.txt");
    if (!file.is_open()) {
        std::cout << "Проблема с чтением файлом";
        return 0;
    }

    file >> n;

    int **ptr_cols = new int *[n];
    for (int i = 0; i < n; i++) {
        ptr_cols[i] = new int[n];
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            file >> ptr_cols[i][j];
        }
    }

    int* buffer = new int[n](); 
    int a = 0; 
    std::cout << "Принадлежность вершин компонентам связности: \n";
    for (int vertex = 0; vertex < n; vertex++) {
        if (buffer[vertex] == 0) {
            a++;
            bfs(ptr_cols, n, buffer, a, vertex);
        }
    }

    for (int i = 0; i < n; i++) {
        std::cout << i + 1 << " : " << buffer[i] - 1 << std::endl; // Component numbering starts from 0
    }
    std::cout << "Количество компонентов связности в графе: "<< a;
    
    for (int i = 0; i < n; i++) {
        delete[] ptr_cols[i];
    }
    delete[] ptr_cols;
    delete[] buffer;

    return 0;
}

void bfs(int **ptr_cols, int n, int* buffer, int a, int vertex) {
    buffer[vertex] = a + 1;

    for (int i = 0; i < n; i++) {
        if (ptr_cols[vertex][i] == 1 && buffer[i] == 0) {
            bfs(ptr_cols, n, buffer, a, i);
        }
    }
}


//Задача 4*. Поиск компонентов связности
//
//В этом задании вам нужно реализовать поиск компонентов связности в графе.
//
//Граф представлен матрицей смежности размерностью N x N — это двумерный массив, содержащий N строчек и N столбцов.
//
//N — это количество вершин графа. Все вершины графа пронумерованы, то есть имеют уникальный индекс от 1 до N включительно.
//
//Значение, находящееся в ячейке матрицы смежности, говорит о наличии или отсутствии связи между вершинами, индексы которых соответствуют номеру строчки и номеру столбца этой ячейки. Если значение в ячейке равно 1, то связь между вершинами есть. Если значение равно 0, то связи между вершинами нет. В ячейках с одинаковыми номерами столбца и строки всегда находится 0.
//
//Ваша задача — имея предоставленную матрицу смежности, найти количество компонентов связности и вывести для каждой вершины номер компонента связности.
//
//Матрица смежности будет задаваться в текстовом файле в формате: первым числом в файле идёт количество вершин графа (N). Далее располагаются N строчек, каждая из которых содержит N чисел — 1 или 0.