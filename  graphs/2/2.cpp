#include <iostream>
#include <fstream>


void bfs(int **ptr_cols, int n,int* buffer,int vertex = 0);
int main(int argc, char *argv[]) {
	int n;
	std::ifstream file("2.txt");
	if (file.is_open()) {
		file >> n;
	} else {
		std::cout << "Проблема с чтением файлом";
		return 0;
	}
	// создание матрицы
	int **ptr_cols = new int *[n];
	for (int i = 0; i < n; i++) {
		ptr_cols[i] = new int[n];
	}
//	инициализация матрицы смежности
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			file >> ptr_cols[i][j];
		}
	}
	
	//создание массива со значениями
	int mass[n]; 
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			file >> ptr_cols[i][j];
		}
	}
	int* buffer = (int*)calloc(n, sizeof( int ));
	int vertex = 0;
	std::cout << "В графе " << n <<" вершин. Введите номер вершины, с которой начнётся обход: ";
	std::cin >> vertex;
	vertex = vertex - 1;
	std::cout << "Порядок обхода вершин: ";
	bfs(ptr_cols, n, buffer,vertex);
	for (int i = 0; i < n; i++) {
		delete[] ptr_cols[i];
	}
	delete[] ptr_cols;
	free(buffer);
	return 0;
	
}
void bfs(int **ptr_cols, int n, int* buffer, int vertex) {
	int lastIndex = 0;
	std::cout << vertex + 1 << " ";
	buffer[vertex] = 1;
	for (int j = 0; j < n; j++) {
		for (int i = 0; i < n; i++) {
			if (ptr_cols[vertex][i] == 1 && buffer[i] == 0) {
				std::cout << i + 1 << " ";
				buffer[i] = 1;
				lastIndex = i;
			}
		}vertex = lastIndex;
	}
}


//Задача 2*. Обход в ширину
//
//В этом задании вам нужно реализовать обход графа в ширину с возможностью выбора начальной вершины.
//
//Граф представлен матрицей смежности размерностью N x N — это двумерный массив, содержащий N строчек и N столбцов.
//
//N — это количество вершин графа. Все вершины графа пронумерованы, то есть имеют уникальный индекс от 1 до N включительно.
//
//Значение, находящееся в ячейке матрицы смежности, говорит о наличии или отсутствии связи между вершинами, индексы которых соответствуют номеру строчки и номеру столбца этой ячейки. Если значение в ячейке равно 1, то связь между вершинами есть. Если значение равно 0, то связи между вершинами нет. В ячейках с одинаковыми номерами столбца и строки всегда находится 0.
//
//Ваша задача — имея предоставленную матрицу смежности, произвести обход графа, представленного этой матрицей, в ширину. При посещении каждой следующей ячейки ваша программа должна вывести на консоль индекс посещаемой ячейки.
//
//Матрица смежности будет задаваться в текстовом файле в формате: первым числом в файле идёт количество вершин графа (N). Далее располагаются N строчек, каждая из которых содержит N чисел — 1 или 0.
//
//При старте программы дайте пользователю возможность выбрать вершину по индексу, с которой начнётся обход графа в ширину. Не забудьте убедиться, что пользователь ввёл допустимый индекс.

